# Disable Eureka if not needed
eureka.client.enabled=false

# Enable logging
logging.level.org.vrajpatel.fintrackergateway=debug
logging.level.org.vrajpatel.fintrackergateway.Config.AuthConfigGatewayFilter=debug
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG


# Set validation URL (no quotes!)
validationUrl=http://userauthenticationservice/userauth/api/auth

# Enable health endpoint
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# CORS configuration
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=https://frontend.vrajpatelproject.software
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders[0]=Authorization
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders[1]=Set-Cookie
spring.cloud.gateway.globalcors.corsConfigurations.[/**].maxAge=3600
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true

# Static service discovery for local development
spring.cloud.discovery.client.simple.instances.userauthenticationservice[0].uri=http://userauthenticationservice:8080


spring.cloud.gateway.routes[1].id=userauthservice-oauth
spring.cloud.gateway.routes[1].uri=lb://userauthenticationservice
spring.cloud.gateway.routes[1].predicates[0].name=Path
spring.cloud.gateway.routes[1].predicates[0].args.pattern=/oauth2/**

spring.cloud.gateway.routes[2].id=userauthservice-api
spring.cloud.gateway.routes[2].uri=lb://userauthenticationservice
spring.cloud.gateway.routes[2].predicates[0].name=Path
spring.cloud.gateway.routes[2].predicates[0].args.pattern=/userauth/api/**

spring.cloud.gateway.routes[3].id=userauthservice-swagger
spring.cloud.gateway.routes[3].uri=lb://userauthenticationservice
spring.cloud.gateway.routes[3].predicates[0].name=Path
spring.cloud.gateway.routes[3].predicates[0].args.pattern=/swagger-ui/**

spring.cloud.gateway.routes[4].id=userauthservice-swagger1
spring.cloud.gateway.routes[4].uri=lb://userauthenticationservice
spring.cloud.gateway.routes[4].predicates[0].name=Path
spring.cloud.gateway.routes[4].predicates[0].args.pattern=/v3/**


spring.cloud.gateway.routes[5].id=userauthservice-actuator
spring.cloud.gateway.routes[5].uri=lb://userauthenticationservice
spring.cloud.gateway.routes[5].predicates[0].name=Path
spring.cloud.gateway.routes[5].predicates[0].args.pattern=/userauth/actuator/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1

#spring.cloud.discovery.client.simple.instances.personalservice[0].uri=http://personalservice:8080
# Routes
spring.cloud.gateway.routes[0].id=personalexpense-api
spring.cloud.gateway.routes[0].uri=http://personalservice:8080
spring.cloud.gateway.routes[0].predicates[0].name=Path
spring.cloud.gateway.routes[0].predicates[0].args.pattern=/personalexpense/**
spring.cloud.gateway.routes[0].filters[0].name=AuthConfigGatewayFilter

spring.cloud.gateway.routes[6].id=personalservice-actuator
spring.cloud.gateway.routes[6].uri=http://personalservice:8080
spring.cloud.gateway.routes[6].predicates[0].name=Path
spring.cloud.gateway.routes[6].predicates[0].args.pattern=/personalservice/actuator/**
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=1
