server.port=8081

eureka.client.service-url.defaultZone=http://localhost:8082/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

domain=localhost

spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=https://localhost:5173
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders[0]=Authorization
spring.cloud.gateway.globalcors.corsConfigurations.[/**].maxAge=3600
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposedHeaders[1]=Set-Cookie

resilience4j.circuitbreaker.instances.CircuitBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.CircuitBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.CircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.CircuitBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.CircuitBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.CircuitBreaker.minimum-number-of-calls=5


spring.cloud.gateway.routes[0].id=personalexpense-api
spring.cloud.gateway.routes[0].uri=lb://PERSONALEXPENSE
spring.cloud.gateway.routes[0].predicates[0].name=Path
spring.cloud.gateway.routes[0].predicates[0].args.pattern=/personalexpense/**
spring.cloud.gateway.routes[0].filters[0]=AuthConfigGatewayFilter

spring.cloud.gateway.routes[1].id=userauthservice-oauth
spring.cloud.gateway.routes[1].uri=lb://USERAUTHSERVICE
spring.cloud.gateway.routes[1].predicates[0].name=Path
spring.cloud.gateway.routes[1].predicates[0].args.pattern=/oauth2/**
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback


spring.cloud.gateway.routes[2].id=userauthservice-api
spring.cloud.gateway.routes[2].uri=lb://USERAUTHSERVICE
spring.cloud.gateway.routes[2].predicates[0].name=Path
spring.cloud.gateway.routes[2].predicates[0].args.pattern=/userauth/api/**
spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.fallbackUri=forward:/fallback

spring.cloud.gateway.routes[3].id=userauthservice-swagger
spring.cloud.gateway.routes[3].uri=lb://USERAUTHSERVICE
spring.cloud.gateway.routes[3].predicates[0].name=Path
spring.cloud.gateway.routes[3].predicates[0].args.pattern=/swagger-ui/**
spring.cloud.gateway.routes[3].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[3].filters[0].args.name=CircuitBreaker
spring.cloud.gateway.routes[3].filters[0].args.fallbackUri=forward:/fallback



spring.cloud.gateway.routes[4].id=userauthservice-swagger1
spring.cloud.gateway.routes[4].uri=lb://USERAUTHSERVICE
spring.cloud.gateway.routes[4].predicates[0].name=Path
spring.cloud.gateway.routes[4].predicates[0].args.pattern=/v3/**
spring.cloud.gateway.routes[4].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[4].filters[0].args.name=CircuitBreaker
spring.cloud.gateway.routes[4].filters[0].args.fallbackUri=forward:/fallback

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

validationUrl=http://localhost:8084/userauth/api/auth